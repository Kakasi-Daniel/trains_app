{"version":3,"sources":["Pages/MakeRegistration.js","store/store.js","Seat.js","Wagon.js","Pages/Train.js","Input.js","Pages/Checkout.js","Navigation.js","App.js","index.js"],"names":["MakeRegistration","useState","days","setDays","trains","setTrains","seats","useSelector","state","useEffect","a","fetch","response","json","key","data","trainsArray","push","trainName","changeDateFilter","day","newFilter","includes","filter","existingDay","className","train","to","date","onClick","bind","length","map","reservation","createSlice","name","initialState","reducers","addRemoveSeat","action","code","localStorage","getItem","Randomstring","generate","setItem","notFoundInStore","newState","i","payload","id","splice","removeItem","JSON","stringify","clearStore","populateStore","actions","store","configureStore","reducer","Seat","props","dispatch","useDispatch","ids","seat","available","seatID","wagonNumber","type","seatNumber","number","circled","Wagon","availableSeats","endingIndex","consecutivePlaces","maxConsecutive","currentConsecutive","minimumSeats","checkIfCircled","totalSeats","replace","index","numberOfWagon","Train","wagons","setWagons","params","useParams","setType","setMinimumSeats","useRef","trainID","current","onChange","e","target","value","defaultValue","htmlFor","parseInt","min","max","wagon","availableSeatsNumber","Input","label","useField","field","meta","touched","error","Checkout","history","useHistory","copyCodeToClipboard","navigator","clipboard","writeText","console","deleteSeatHandler","initialValues","cnp","email","validationSchema","yup","matches","required","onSubmit","values","details","getData","wagonData","forEach","method","headers","body","Navigation","location","useLocation","pathname","App","parse","path","exact","ex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76a5e0cb.chunk.js","sourcesContent":["import './MakeRegistration.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction MakeRegistration() {\n  const [days, setDays] = useState([]);\n  const [trains, setTrains] = useState([]);\n  const seats = useSelector((state) => state);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        'https://trains-861bd-default-rtdb.firebaseio.com/trains.json'\n      );\n      const data = await response.json();\n      const trainsArray = [];\n      for (let key in data) {\n        trainsArray.push({\n          trainName: key,\n          ...data[key],\n        });\n      }\n      setTrains(trainsArray);\n    })();\n  }, []);\n\n  const changeDateFilter = (day) => {\n    let newFilter = [...days];\n    if (newFilter.includes(day)) {\n      newFilter = newFilter.filter((existingDay) => existingDay !== day);\n    } else {\n      newFilter.push(day);\n    }\n    setDays([...newFilter]);\n  };\n\n\n  return (\n    <div className=\"makeRegistrationContainer\">\n      \n\n      {seats[0]?.train ? (\n        <div className=\"selectedTrain\">\n          <p>You already chose the train</p>\n          <div className=\"trainElement\">\n            <Link to={'/trains/' + seats[0].train}>\n              <p className=\"trainDate\">{seats[0].date}</p>\n              <p className=\"trainName\">{seats[0].train}</p>\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <>\n        <div className=\"date\">\n        <p>Select a date that suits your need</p>\n        <ul className=\"daysList\">\n          <li>\n            <button\n              className={days.includes('Mon') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Mon')}\n            >\n              Mon\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Tue') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Tue')}\n            >\n              Tue\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Wed') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Wed')}\n            >\n              Wed\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Thu') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Thu')}\n            >\n              Thu\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Fri') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Fri')}\n            >\n              Fri\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Sat') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Sat')}\n            >\n              Sat\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Sun') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Sun')}\n            >\n              Sun\n            </button>\n          </li>\n        </ul>\n      </div>\n        <ul className=\"trains\">\n          {days.length === 0 ? (\n            <>\n              {trains.map((train) => (\n                <li className=\"trainElement\" key={train.trainName}>\n                  <Link to={'/trains/' + train.trainName}>\n                    <p className=\"trainDate\">{train.date}</p>\n                    <p className=\"trainName\">{train.trainName}</p>\n                  </Link>\n                </li>\n              ))}\n            </>\n          ) : (\n            <>\n              {trains.map((train) => {\n                if (days.includes(train.date)) {\n                  return (\n                    <li className=\"trainElement\" key={train.trainName}>\n                      <Link to={'/trains/' + train.trainName}>\n                        <p className=\"trainDate\">{train.date}</p>\n                        <p className=\"trainName\">{train.trainName}</p>\n                      </Link>\n                    </li>\n                  );\n                }\n                return null;\n              })}\n            </>\n          )}\n        </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default MakeRegistration;\n","import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport Randomstring from 'randomstring';\n\nconst initialState = [];\n\nconst reservation = createSlice({\n  name: 'reservation',\n  initialState,\n  reducers: {\n    addRemoveSeat(state, action) {\n      let code = localStorage.getItem('code');\n      if (!code) {\n        code = Randomstring.generate();\n        localStorage.setItem('code', code);\n      }\n      let notFoundInStore = true;\n      const newState = [...state];\n\n      for (let i = 0; i < newState.length; i++) {\n        if (action.payload.id === newState[i].id) {\n          notFoundInStore = false;\n          newState.splice(i, 1);\n          break;\n        }\n      }\n\n      if (notFoundInStore) {\n        newState.push(action.payload);\n      }\n\n      if (newState.length === 0) {\n        localStorage.removeItem('seats');\n      } else {\n        localStorage.setItem('seats', JSON.stringify([...newState]));\n      }\n      return [...newState];\n    },\n    clearStore(state) {\n      localStorage.removeItem('seats');\n      return [];\n    },\n    populateStore(state, action) {\n      return [...action.payload];\n    },\n  },\n});\n\nconst actions = reservation.actions;\n\nexport const store = configureStore({ reducer: reservation.reducer });\nexport default actions;\n","import './Seat.css';\nimport {useSelector,useDispatch} from 'react-redux'\nimport actions from './store/store'\nimport {useEffect} from 'react';\n\nfunction Seat(props) {\n\n\n    const dispatch = useDispatch();\n    const reservation = useSelector(state => state)\n\n   \n\n    const addSeatHandler = () =>{\n\n        const seat = {\n            id: props.seatID,\n            train: props.trainName,\n            wagonNumber: props.wagonNumber,\n            type: props.type,\n            seatNumber: props.number,\n            date:props.date\n        }\n\n        dispatch(actions.addRemoveSeat(seat))\n    }\n\n    const ids = reservation.map(seat => seat.id)\n\n    if(!props.available){\n       return <div className='seat unavailable'>{props.number}</div>\n        \n    }\n\n  return <div onClick={addSeatHandler} className={`seat${ids.includes(props.seatID) ? ' selected' : ''}${props.circled}`}>{props.number}</div>;\n}\n\nexport default Seat;\n","import './Wagon.css';\nimport Seat from './Seat';\n\nfunction Wagon(props) {\n\n  let availableSeats;\n\n  let endingIndex = 0;\n\n\n  const consecutivePlaces = () =>{\n    let maxConsecutive = 0;\n    let currentConsecutive = 0;\n    \n    for(let i = 0;i<props.seats.length;i++){\n      if(props.seats[i].available){\n        currentConsecutive++;\n        if(currentConsecutive > maxConsecutive){\n          maxConsecutive =  currentConsecutive;\n          endingIndex = i;\n          if(maxConsecutive===props.minimumSeats){\n            return maxConsecutive;\n          }\n        }\n      }else{\n        currentConsecutive = 0;\n      }\n    }\n\n    return false;\n  }\n\n  const checkIfCircled = () =>{\n    const totalSeats = consecutivePlaces()\n    if(totalSeats && endingIndex){\n      return endingIndex - totalSeats;\n    }else{\n      return false;\n    }\n  }\n\n\n  if(props.minimumSeats === ''){\n    availableSeats = ''\n  }else if(consecutivePlaces() <props.minimumSeats){\n    availableSeats = 'opacityReduced'\n  }\n\n  return (\n    <div className={'wagon' + ' ' + props.type.replace(/ /g, '') + ' ' + availableSeats}>\n      <p className=\"wagonType\">{props.type}</p>\n      {props.seats.map((seat,index) => (\n        <Seat\n          wagonNumber={props.numberOfWagon}\n          key={`${props.trainName}${props.numberOfWagon}${seat.seatNumber}`}\n          seatID={`${props.trainName}${props.numberOfWagon}${seat.seatNumber}`}\n          available={seat.available}\n          number={seat.seatNumber}\n          type={props.type}\n          date={props.date}\n          trainName={props.trainName}\n          circled={props.minimumSeats !== '' ? ((checkIfCircled() !==false && index>=checkIfCircled() && index <= endingIndex) ? ' circled' : '') : ''}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Wagon;\n","import { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport Wagon from '../Wagon';\nimport { useSelector } from 'react-redux';\nimport './Train.css';\n\nfunction Train() {\n  const [wagons, setWagons] = useState([]);\n  const params = useParams();\n  const [type, setType] = useState('all');\n  const [minimumSeats, setMinimumSeats] = useState('');\n  const date = useRef('day');\n  const seats = useSelector((state) => state);\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n          params.trainID +\n          '.json'\n      );\n      const data = await response.json();\n\n      date.current = data.date;\n\n      setWagons([...data.wagons]);\n    })();\n  }, []);\n\n  const typeChangedHandler = (e) => {\n    setType(e.target.value);\n  };\n\n  const minimumSeatsChangeHandler = (e) => {\n    const number = parseInt(+e.target.value);\n\n    if (number >= 2 && number <= 6) {\n      setMinimumSeats(number);\n    } else if (e.target.value === '') {\n      setMinimumSeats(e.target.value);\n    }\n  };\n\n  return (\n    <div className=\"wagonsWrapper\">\n      <div className=\"wagonsFilters\">\n        <select\n          onChange={typeChangedHandler}\n          className=\"wagonTypeSelector\"\n          name=\"WagonType\"\n        >\n          <option defaultValue value=\"all\">\n            All\n          </option>\n          <option value=\"first class\">First Class</option>\n          <option value=\"second class\">Second Class</option>\n          <option value=\"sleeping\">Sleeping</option>\n        </select>\n        <label className=\"minimumSeatsWrapper\" htmlFor=\"minimumSeats\">\n          Available consecutive seats:\n          <input\n            value={minimumSeats}\n            onChange={minimumSeatsChangeHandler}\n            type=\"number\"\n            id=\"minimumSeats\"\n            className=\"minimumSeats\"\n            min=\"2\"\n            max=\"6\"\n          />\n        </label>\n      </div>\n      <div className=\"legendWrapper\">\n        <p>Seat color legend:</p>\n        <div className=\"legend\">\n          <div className=\"legendItem\">\n            <div className=\"legendColor\"></div>\n            - available\n          </div>\n          <div className=\"legendItem\">\n            <div className=\"legendColor unavailable\"></div>\n            - unavailable\n          </div>\n          <div className=\"legendItem\">\n            <div className=\"legendColor selected\"></div>\n            - selected\n          </div>\n        </div>\n      </div>\n      <div className=\"wagons\">\n        {wagons.map((wagon, index) => {\n          if (type === 'all') {\n            return (\n              <Wagon\n                date={date.current}\n                trainName={params.trainID}\n                numberOfWagon={index + 1}\n                key={index}\n                availableSeatsNumber = {wagon.availableSeats}\n                seats={wagon.seats}\n                type={wagon.type}\n                minimumSeats={minimumSeats}\n              />\n            );\n          } else if (wagon.type === type) {\n            return (\n              <Wagon\n                date={date.current}\n                trainName={params.trainID}\n                numberOfWagon={index + 1}\n                key={index}\n                availableSeatsNumber = {wagon.availableSeats}\n                seats={wagon.seats}\n                type={wagon.type}\n                minimumSeats={minimumSeats}\n              />\n            );\n          }\n        })}\n      </div>\n      {seats.length === 0 ? (\n        <p className=\"selectSeat\">Select a seat in order to reserve it.</p>\n      ) : (\n        <Link className=\"routerLink trainsLink\" to=\"/checkout\" replace>\n          Go to checkout &gt;\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default Train;\n","import { useField } from \"formik\";\n\n\nfunction Input({label,...props}) {\n\n  const [field,meta] = useField(props)\n\n  return (\n    <>\n    <label htmlFor={label}>\n      {label} \n    <input id={label} {...field} {...props}/>\n    </label>\n    {(meta.touched && meta.error) && <div className='err' >{meta.error}</div>}\n    </>\n  );\n}\n\nexport default Input;\n","import './Checkout.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport Input from '../Input';\nimport Randomstring from 'randomstring';\nimport actions from '../store/store';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useHistory } from 'react-router-dom';\n\nfunction Checkout() {\n  const seats = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  let code = localStorage.getItem('code');\n  if (!code) {\n    code = Randomstring.generate();\n    localStorage.setItem('code', code);\n  }\n\n  const copyCodeToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n    }\n  };\n\n  const deleteSeatHandler = (seatID) => {\n    dispatch(actions.addRemoveSeat({ id: seatID }));\n  };\n\n  if(seats.length === 0){\n    history.replace('/')\n  }\n\n  return (\n    <div className=\"checkoutWrapper\">\n      <Formik\n        initialValues={{\n          cnp: '',\n          name: '',\n          email: '',\n        }}\n        validationSchema={yup.object({\n          cnp: yup\n            .string()\n            .matches(/^[0-9]+$/, 'CNP must be only digits')\n            .min(13, 'CNP must be exactly 13 characters long')\n            .max(13, 'CNP must be exactly 13 characters long')\n            .required('age is required'),\n          name: yup\n            .string()\n            .min(5, 'Minumum 5 characters')\n            .max(20, 'Maximum 20 characters')\n            .matches(/\\s/, 'Write down all of your names')\n            .required('Name is a required field!'),\n          email: yup\n            .string()\n            .email('Invalid email!')\n            .required('Email is required'),\n        })}\n        onSubmit={(values) => {\n          (async () => {\n            const data = {\n              seats,\n              details: { ...values },\n            };\n            const getData = await fetch(\n              'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n                seats[0].train +\n                '/wagons.json'\n            );\n            const wagonData = await getData.json();\n\n            seats.forEach(seat =>{\n                wagonData[seat.wagonNumber-1].availableSeats--\n                wagonData[seat.wagonNumber-1].seats[seat.seatNumber-1].available=false\n            })\n\n            const postWagonData = await fetch(\n                'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n                  seats[0].train +\n                  '/wagons.json',\n                  {\n                    method: 'PUT',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(wagonData),\n                  }\n              );\n\n\n            const response = await fetch(\n              'https://trains-861bd-default-rtdb.firebaseio.com/registrations/' +\n                code +\n                '.json',\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ ...data }),\n              }\n            );\n            dispatch(actions.clearStore());\n            localStorage.removeItem('code');\n            history.replace('/');\n          })();\n        }}\n      >\n        {(props) => (\n          <Form>\n            <h2>Book train seats</h2>\n            <Input label=\"CNP\" type=\"text\" name=\"cnp\" />\n            <Input label=\"Name\" type=\"text\" name=\"name\" />\n            <Input label=\"E-mail\" type=\"email\" name=\"email\" />\n            <div className=\"unique\">\n              <p>{code}</p>\n              <button type=\"button\" onClick={copyCodeToClipboard}>\n                Copy to clipboard\n              </button>\n            </div>\n            <button type=\"submit\">Save registration</button>\n          </Form>\n        )}\n      </Formik>\n      <ul className=\"seatsList\">\n        {seats.map((seat) => (\n          <li>\n            <p>{seat.train}</p>\n            <p>Wagon number: {seat.wagonNumber}</p>\n            <p>{seat.type}</p>\n            <p>seat nr.: {seat.seatNumber}</p>\n            <button\n              className=\"deleteIcon\"\n              onClick={deleteSeatHandler.bind(null, seat.id)}\n            >\n              <DeleteIcon />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import {Link,useLocation} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nfunction Navigation() {\n\n    const seats = useSelector(state => state)\n    const location = useLocation()\n\n    return (\n        <header>\n        <nav>\n          {location.pathname !== '/' && <Link to=\"/\">Back to home</Link>}\n          {(seats.length !== 0 && location.pathname !== '/checkout') && (\n            <Link to=\"/checkout\" replace>\n              Checkout\n            </Link>\n          )}\n        </nav>\n      </header>\n    )\n}\n\nexport default Navigation\n","import './App.css';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MakeRegistration from './Pages/MakeRegistration';\nimport Train from './Pages/Train';\nimport Checkout from './Pages/Checkout';\nimport { useEffect } from 'react';\nimport actions from './store/store';\nimport Navigation from './Navigation';\n\nfunction App() {\n  const seats = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (localStorage.getItem('seats')) {\n      const data = JSON.parse(localStorage.getItem('seats'));\n      dispatch(actions.populateStore(data));\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n     \n      <Navigation/>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MakeRegistration />\n        </Route>\n        <Route path=\"/trains/:trainID\" exact>\n          <Train />\n        </Route>\n        <Route path=\"/checkout\" ex>\n          <Checkout />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {store} from './store/store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}