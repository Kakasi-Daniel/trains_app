{"version":3,"sources":["Pages/MakeRegistration.js","store/store.js","Components/Seat.js","Components/Wagon.js","Pages/Train.js","Components/Input.js","Pages/Checkout.js","Components/Navigation.js","App.js","index.js"],"names":["MakeRegistration","useState","days","setDays","trains","setTrains","loading","setLoading","seats","useSelector","state","useEffect","a","fetch","response","json","key","data","trainsArray","push","trainName","changeDateFilter","day","newFilter","includes","filter","existingDay","className","train","to","date","onClick","bind","color","size","css","display","margin","width","map","length","reservation","createSlice","name","initialState","reducers","addRemoveSeat","action","code","localStorage","getItem","Randomstring","generate","setItem","notFoundInStore","newState","i","payload","id","splice","removeItem","JSON","stringify","clearStore","populateStore","_","actions","store","configureStore","reducer","Seat","props","dispatch","useDispatch","ids","seat","available","seatID","wagonNumber","type","seatNumber","number","circled","Wagon","availableSeats","endingIndex","consecutivePlaces","maxConsecutive","currentConsecutive","minimumSeats","checkIfCircled","totalSeats","replace","index","numberOfWagon","Train","wagons","setWagons","params","useParams","setType","setMinimumSeats","useRef","history","useHistory","trainID","current","onChange","e","target","value","defaultValue","htmlFor","parseInt","min","max","wagon","availableSeatsNumber","Input","label","useField","field","meta","touched","error","Checkout","copyCodeToClipboard","navigator","clipboard","writeText","deleteSeatHandler","initialValues","cnp","email","validationSchema","yup","matches","required","onSubmit","values","details","getData","wagonData","forEach","method","headers","body","Navigation","location","useLocation","pathname","App","parse","path","exact","ReactDOM","render","document","getElementById"],"mappings":"+pBA2IeA,MArIf,WAA6B,IAAD,EAC1B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAErCC,qBAAU,WACR,sBAAC,kCAAAC,EAAA,sEACwBC,MACrB,gEAFH,cACOC,EADP,gBAIoBA,EAASC,OAJ7B,OAMC,IAASC,KAFHC,EAJP,OAKOC,EAAc,GACJD,EACdC,EAAYC,KAAZ,aACEC,UAAWJ,GACRC,EAAKD,KAGZX,EAAUa,GACVX,GAAW,GAbZ,2CAAD,KAeC,IAEH,IAAMc,EAAmB,SAACC,GACxB,IAAIC,EAAS,YAAOrB,GAChBqB,EAAUC,SAASF,GACrBC,EAAYA,EAAUE,QAAO,SAACC,GAAD,OAAiBA,IAAgBJ,KAE9DC,EAAUJ,KAAKG,GAEjBnB,EAAQ,YAAIoB,KAId,OACE,qBAAKI,UAAU,4BAAf,UAEG,UAAAnB,EAAM,UAAN,eAAUoB,OACT,sBAAKD,UAAU,gBAAf,UACE,4DACA,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAME,GAAI,WAAarB,EAAM,GAAGoB,MAAhC,UACE,mBAAGD,UAAU,YAAb,SAA0BnB,EAAM,GAAGsB,OACnC,mBAAGH,UAAU,YAAb,SAA0BnB,EAAM,GAAGoB,gBAKzC,qCACA,sBAAKD,UAAU,OAAf,UACA,mEACA,qBAAIA,UAAU,WAAd,UACE,6BACE,wBACEA,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,mBAOF,6BACE,wBACEL,UAAWzB,EAAKsB,SAAS,OAAS,SAAW,GAC7CO,QAASV,EAAiBW,KAAK,KAAM,OAFvC,yBASN,cAAC,cAAD,CAAa1B,QAASA,EAAS2B,MAAM,OAAOC,KAAM,GAAIC,IAAK,CAACC,QAAQ,QAAQC,OAAO,OAAOC,MAAM,iBAC9F,oBAAIX,UAAU,SAAd,SACGvB,EAAOmC,KAAI,SAACX,GACP,OAAI1B,EAAKsB,SAASI,EAAME,OAAyB,IAAhB5B,EAAKsC,OAElC,oBAAIb,UAAU,eAAd,SACE,eAAC,IAAD,CAAME,GAAI,WAAaD,EAAMR,UAA7B,UACE,mBAAGO,UAAU,YAAb,SAA0BC,EAAME,OAChC,mBAAGH,UAAU,YAAb,SAA0BC,EAAMR,gBAHFQ,EAAMR,WAQrC,gB,0CC7HjBqB,EAAcC,YAAY,CAC9BC,KAAM,cACNC,aAJmB,GAKnBC,SAAU,CACRC,cADQ,SACMpC,EAAOqC,GACnB,IAAIC,EAAOC,aAAaC,QAAQ,QAC3BF,IACHA,EAAOG,IAAaC,WACpBH,aAAaI,QAAQ,OAAQL,IAK/B,IAHA,IAAIM,GAAkB,EAChBC,EAAQ,YAAO7C,GAEZ8C,EAAI,EAAGA,EAAID,EAASf,OAAQgB,IACnC,GAAIT,EAAOU,QAAQC,KAAOH,EAASC,GAAGE,GAAI,CACxCJ,GAAkB,EAClBC,EAASI,OAAOH,EAAG,GACnB,MAaJ,OATIF,GACFC,EAASpC,KAAK4B,EAAOU,SAGC,IAApBF,EAASf,OACXS,aAAaW,WAAW,SAExBX,aAAaI,QAAQ,QAASQ,KAAKC,UAAL,YAAmBP,KAE5C,YAAIA,IAEbQ,WA7BQ,WA+BN,OADAd,aAAaW,WAAW,SACjB,IAETI,cAjCQ,SAiCMC,EAAGlB,GACf,OAAO,YAAIA,EAAOU,aAKlBS,EAAUzB,EAAYyB,QAEfC,EAAQC,YAAe,CAAEC,QAAS5B,EAAY4B,UAC5CH,ICdAI,MAhCf,SAAcC,GAGV,IAAMC,EAAWC,cAmBXC,EAlBcjE,aAAY,SAAAC,GAAK,OAAIA,KAkBjB6B,KAAI,SAAAoC,GAAI,OAAIA,EAAKjB,MAEzC,OAAIa,EAAMK,UAKL,oBAAI7C,QArBc,WAEnB,IAAM4C,EAAO,CACTjB,GAAIa,EAAMM,OACVjD,MAAO2C,EAAMnD,UACb0D,YAAaP,EAAMO,YACnBC,KAAMR,EAAMQ,KACZC,WAAYT,EAAMU,OAClBnD,KAAKyC,EAAMzC,MAGf0C,EAASN,EAAQpB,cAAc6B,KAUDhD,UAAS,cAAS+C,EAAIlD,SAAS+C,EAAMM,QAAU,YAAc,IAApD,OAAyDN,EAAMW,SAArG,SAAiHX,EAAMU,SAJlH,oBAAItD,UAAU,mBAAd,SAAkC4C,EAAMU,UCgDvCE,MA1Ef,SAAeZ,GACb,IAAIa,EAEAC,EAAc,EAEZC,EAAoB,WAIxB,IAHA,IAAIC,EAAiB,EACjBC,EAAqB,EAEhBhC,EAAI,EAAGA,EAAIe,EAAM/D,MAAMgC,OAAQgB,IACtC,GAAIe,EAAM/D,MAAMgD,GAAGoB,WAEjB,KADAY,EACyBD,IAEvBF,EAAc7B,GADd+B,EAAiBC,KAEMjB,EAAMkB,cAC3B,OAAOF,OAIXC,EAAqB,EAIzB,OAAO,GAGHE,EAAiB,WACrB,IAAMC,EAAaL,IACnB,SAAIK,IAAcN,IACTA,EAAcM,GAYzB,MAN2B,KAAvBpB,EAAMkB,aACRL,EAAiB,GACRE,IAAsBf,EAAMkB,eACrCL,EAAiB,kBAIjB,qBACEzD,UAAW,SAAW4C,EAAMQ,KAAKa,QAAQ,KAAM,IAAM,IAAMR,EAD7D,UAGE,mBAAGzD,UAAU,YAAb,SAA0B4C,EAAMQ,OAChC,oBAAIpD,UAAU,iBAAd,SACG4C,EAAM/D,MAAM+B,KAAI,SAACoC,EAAMkB,GAAP,OACf,cAAC,EAAD,CACEf,YAAaP,EAAMuB,cAEnBjB,OAAM,UAAKN,EAAMnD,WAAX,OAAuBmD,EAAMuB,eAA7B,OAA6CnB,EAAKK,YACxDJ,UAAWD,EAAKC,UAChBK,OAAQN,EAAKK,WACbD,KAAMR,EAAMQ,KACZjD,KAAMyC,EAAMzC,KACZV,UAAWmD,EAAMnD,UACjB8D,QACyB,KAAvBX,EAAMkB,eACmB,IAArBC,KACAG,GAASH,KACTG,GAASR,EACP,WAEF,IAhBR,UAEUd,EAAMnD,WAFhB,OAE4BmD,EAAMuB,eAFlC,OAEkDnB,EAAKK,sB,OC+ElDe,MA9Hf,WACE,MAA8B9F,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAO+F,EAAP,KAAeC,EAAf,KACMC,EAASC,cACf,EAAwBlG,mBAAS,OAAjC,mBAAO8E,EAAP,KAAaqB,EAAb,KACA,EAAwCnG,mBAAS,IAAjD,mBAAOwF,EAAP,KAAqBY,EAArB,KACMvE,EAAOwE,iBAAO,OACd9F,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAE/B6F,EAAUC,cAqChB,OAnCA7F,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAE0BC,MACrB,2DACEqF,EAAOO,QACP,SALP,cAES3F,EAFT,gBAOsBA,EAASC,OAP/B,OAOSE,EAPT,OAQGa,EAAK4E,QAAUzF,EAAKa,KAEpBmE,EAAU,YAAIhF,EAAK+E,SACnBzF,GAAW,GAXd,kDAaGgG,EAAQX,QAAQ,KAbnB,yDAAD,KAgBC,CAACW,EAASL,EAAOO,UAmBlB,sBAAK9E,UAAU,gBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yBACEgF,SApBmB,SAACC,GAC1BR,EAAQQ,EAAEC,OAAOC,QAoBXnF,UAAU,oBACVgB,KAAK,YAHP,UAKE,wBAAQoE,cAAY,EAACD,MAAM,MAA3B,iBAGA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,WAAd,yBAEF,wBAAOnF,UAAU,sBAAsBqF,QAAQ,eAA/C,yCAEE,uBACEF,MAAOrB,EACPkB,SA/BwB,SAACC,GACjC,IAAM3B,EAASgC,UAAUL,EAAEC,OAAOC,OAE9B7B,GAAU,GAAKA,GAAU,EAC3BoB,EAAgBpB,GACY,KAAnB2B,EAAEC,OAAOC,MAClBT,EAAgBO,EAAEC,OAAOC,OAEzBT,EAAgB,KAwBVtB,KAAK,SACLrB,GAAG,eACH/B,UAAU,eACVuF,IAAI,IACJC,IAAI,YAIV,sBAAKxF,UAAU,gBAAf,UACE,mDACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,gBADjB,iBAGA,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,4BADjB,mBAGA,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,yBADjB,sBAKJ,cAAC,cAAD,CACErB,QAASA,EACT2B,MAAM,OACNC,KAAM,GACNC,IAAK,CAAEC,QAAS,QAASC,OAAQ,OAAQC,MAAO,iBAElD,oBAAIX,UAAU,SAAd,SACGqE,EAAOzD,KAAI,SAAC6E,EAAOvB,GAClB,OAAIuB,EAAMrC,OAASA,GAAiB,QAATA,EAGrB,cAAC,EAAD,CACEjD,KAAMA,EAAK4E,QACXtF,UAAW8E,EAAOO,QAClBX,cAAeD,EAAQ,EAEvBwB,qBAAsBD,EAAMhC,eAC5B5E,MAAO4G,EAAM5G,MACbuE,KAAMqC,EAAMrC,KACZU,aAAcA,GAJTI,GASN,UAGO,IAAjBrF,EAAMgC,OACL,mBAAGb,UAAU,aAAb,mDAEA,cAAC,IAAD,CAAMA,UAAU,wBAAwBE,GAAG,YAA3C,kC,6CC5GOyF,MAff,YAAkC,IAAlBC,EAAiB,EAAjBA,MAAShD,EAAQ,iBAE/B,EAAqBiD,YAASjD,GAA9B,mBAAOkD,EAAP,KAAaC,EAAb,KAEA,OACE,qCACA,wBAAOV,QAASO,EAAhB,UACGA,EACH,+CAAO7D,GAAI6D,GAAWE,GAAWlD,OAE/BmD,EAAKC,SAAWD,EAAKE,OAAU,qBAAKjG,UAAU,MAAf,SAAuB+F,EAAKE,Y,kBCqIlDC,MAvIf,WACE,IAAMrH,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAC/B8D,EAAWC,cACX8B,EAAUC,cAEZxD,EAAOC,aAAaC,QAAQ,QAC3BF,IACHA,EAAOG,IAAaC,WACpBH,aAAaI,QAAQ,OAAQL,IAG/B,IAAM8E,EAAmB,uCAAG,sBAAAlH,EAAA,sEAClBmH,UAAUC,UAAUC,UAAUjF,GADZ,2CAAH,qDAInBkF,EAAoB,SAACrD,GACzBL,EAASN,EAAQpB,cAAc,CAAEY,GAAImB,MAOvC,OAJoB,IAAjBrE,EAAMgC,QACP+D,EAAQX,QAAQ,KAIhB,sBAAKjE,UAAU,kBAAf,UACE,cAAC,IAAD,CACEwG,cAAe,CACbC,IAAK,GACLzF,KAAM,GACN0F,MAAO,IAETC,iBAAkBC,IAAW,CAC3BH,IAAKG,MAEFC,QAAQ,WAAY,2BACpBtB,IAAI,GAAI,0CACRC,IAAI,GAAI,0CACRsB,SAAS,mBACZ9F,KAAM4F,MAEHrB,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRqB,QAAQ,KAAM,gCACdC,SAAS,6BACZJ,MAAOE,MAEJF,MAAM,kBACNI,SAAS,uBAEdC,SAAU,SAACC,GACT,sBAAC,gCAAA/H,EAAA,6DACOK,EAAO,CACXT,QACAoI,QAAQ,eAAMD,IAHjB,SAKuB9H,MACpB,2DACEL,EAAM,GAAGoB,MACT,gBARL,cAKOiH,EALP,gBAUyBA,EAAQ9H,OAVjC,cAUO+H,EAVP,OAYCtI,EAAMuI,SAAQ,SAAApE,GACVmE,EAAUnE,EAAKG,YAAY,GAAGM,iBAC9B0D,EAAUnE,EAAKG,YAAY,GAAGtE,MAAMmE,EAAKK,WAAW,GAAGJ,WAAU,KAdtE,UAiBO/D,MACF,2DACEL,EAAM,GAAGoB,MACT,eACA,CACEoH,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMrF,KAAKC,UAAUgF,KA1B9B,yBA+BOjI,MACJ,kEACEmC,EACA,QACF,CACEgG,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMrF,KAAKC,UAAL,eAAoB7C,MAxC/B,QA2CCuD,EAASN,EAAQH,cACjBd,aAAaW,WAAW,QACxB2C,EAAQX,QAAQ,KA7CjB,2CAAD,IAzBJ,SA0EG,SAACrB,GAAD,OACC,eAAC,IAAD,WACE,kDACA,cAAC,EAAD,CAAOgD,MAAM,MAAMxC,KAAK,OAAOpC,KAAK,QACpC,cAAC,EAAD,CAAO4E,MAAM,OAAOxC,KAAK,OAAOpC,KAAK,SACrC,cAAC,EAAD,CAAO4E,MAAM,SAASxC,KAAK,QAAQpC,KAAK,UACxC,sBAAKhB,UAAU,SAAf,UACE,4BAAIqB,IACJ,wBAAQ+B,KAAK,SAAShD,QAAS+F,EAA/B,kCAIF,wBAAQ/C,KAAK,SAAb,qCAIN,oBAAIpD,UAAU,YAAd,SACGnB,EAAM+B,KAAI,SAACoC,GAAD,OACT,+BACE,4BAAIA,EAAK/C,QACT,+CAAkB+C,EAAKG,eACvB,4BAAIH,EAAKI,OACT,2CAAcJ,EAAKK,cACnB,wBACErD,UAAU,aACVI,QAASmG,EAAkBlG,KAAK,KAAM2C,EAAKjB,IAF7C,SAIE,cAAC,IAAD,QATKiB,EAAKjB,a,OCnGTyF,MAxBf,WACE,IAAM3I,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAC/B0I,EAAWC,cAEjB,OACE,iCACE,8BACE,+BACyB,MAAtBD,EAASE,UACR,6BACE,cAAC,IAAD,CAAMzH,GAAG,IAAT,4BAGc,IAAjBrB,EAAMgC,QAAsC,cAAtB4G,EAASE,UAC9B,6BACE,cAAC,IAAD,CAAMzH,GAAG,YAAT,gCCwBC0H,MAlCf,WACE,IAAM/E,EAAWC,cASjB,OAPA9D,qBAAU,WACR,GAAIsC,aAAaC,QAAQ,SAAU,CACjC,IAAMjC,EAAO4C,KAAK2F,MAAMvG,aAAaC,QAAQ,UAC7CsB,EAASN,EAAQF,cAAc/C,OAEhC,CAACuD,IAGF,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiF,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,OAAK,EAApC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,IAAD,CAAU7H,GAAG,QAEf,cAAC,IAAD,CAAO4H,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU5H,GAAG,eC9BvB8H,IAASC,OACP,cAAC,IAAD,CAAUzF,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF0F,SAASC,eAAe,W","file":"static/js/main.6fb64cc6.chunk.js","sourcesContent":["import './MakeRegistration.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {PulseLoader} from 'react-spinners'\n\nfunction MakeRegistration() {\n  const [days, setDays] = useState([]);\n  const [trains, setTrains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const seats = useSelector((state) => state);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        'https://trains-861bd-default-rtdb.firebaseio.com/trains.json'\n      );\n      const data = await response.json();\n      const trainsArray = [];\n      for (let key in data) {\n        trainsArray.push({\n          trainName: key,\n          ...data[key],\n        });\n      }\n      setTrains(trainsArray);\n      setLoading(false);\n    })();\n  }, []);\n\n  const changeDateFilter = (day) => {\n    let newFilter = [...days];\n    if (newFilter.includes(day)) {\n      newFilter = newFilter.filter((existingDay) => existingDay !== day);\n    } else {\n      newFilter.push(day);\n    }\n    setDays([...newFilter]);\n  };\n\n\n  return (\n    <div className=\"makeRegistrationContainer\">\n\n      {seats[0]?.train ? (\n        <div className=\"selectedTrain\">\n          <p>You already chose the train</p>\n          <div className=\"trainElement\">\n            <Link to={'/trains/' + seats[0].train}>\n              <p className=\"trainDate\">{seats[0].date}</p>\n              <p className=\"trainName\">{seats[0].train}</p>\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <>\n        <div className=\"date\">\n        <p>Select a date that suits your need</p>\n        <ul className=\"daysList\">\n          <li>\n            <button\n              className={days.includes('Mon') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Mon')}\n            >\n              Mon\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Tue') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Tue')}\n            >\n              Tue\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Wed') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Wed')}\n            >\n              Wed\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Thu') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Thu')}\n            >\n              Thu\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Fri') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Fri')}\n            >\n              Fri\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Sat') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Sat')}\n            >\n              Sat\n            </button>\n          </li>\n          <li>\n            <button\n              className={days.includes('Sun') ? 'active' : ''}\n              onClick={changeDateFilter.bind(null, 'Sun')}\n            >\n              Sun\n            </button>\n          </li>\n        </ul>\n      </div>\n      <PulseLoader loading={loading} color='#fff' size={30} css={{display:'block',margin:'auto',width:'fit-content'}}/>\n        <ul className=\"trains\">\n          {trains.map((train) => {\n                if (days.includes(train.date) || days.length === 0) {\n                  return (\n                    <li className=\"trainElement\" key={train.trainName}>\n                      <Link to={'/trains/' + train.trainName}>\n                        <p className=\"trainDate\">{train.date}</p>\n                        <p className=\"trainName\">{train.trainName}</p>\n                      </Link>\n                    </li>\n                  );\n                }\n                return null;\n              })}\n        </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default MakeRegistration;\n","import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport Randomstring from 'randomstring';\n\nconst initialState = [];\n\nconst reservation = createSlice({\n  name: 'reservation',\n  initialState,\n  reducers: {\n    addRemoveSeat(state, action) {\n      let code = localStorage.getItem('code');\n      if (!code) {\n        code = Randomstring.generate();\n        localStorage.setItem('code', code);\n      }\n      let notFoundInStore = true;\n      const newState = [...state];\n\n      for (let i = 0; i < newState.length; i++) {\n        if (action.payload.id === newState[i].id) {\n          notFoundInStore = false;\n          newState.splice(i, 1);\n          break;\n        }\n      }\n\n      if (notFoundInStore) {\n        newState.push(action.payload);\n      }\n\n      if (newState.length === 0) {\n        localStorage.removeItem('seats');\n      } else {\n        localStorage.setItem('seats', JSON.stringify([...newState]));\n      }\n      return [...newState];\n    },\n    clearStore() {\n      localStorage.removeItem('seats');\n      return [];\n    },\n    populateStore(_, action) {\n      return [...action.payload];\n    },\n  },\n});\n\nconst actions = reservation.actions;\n\nexport const store = configureStore({ reducer: reservation.reducer });\nexport default actions;\n","import './Seat.css';\nimport {useSelector,useDispatch} from 'react-redux'\nimport actions from '../store/store'\n\nfunction Seat(props) {\n\n\n    const dispatch = useDispatch();\n    const reservation = useSelector(state => state)\n\n   \n\n    const addSeatHandler = () =>{\n\n        const seat = {\n            id: props.seatID,\n            train: props.trainName,\n            wagonNumber: props.wagonNumber,\n            type: props.type,\n            seatNumber: props.number,\n            date:props.date\n        }\n\n        dispatch(actions.addRemoveSeat(seat))\n    }\n\n    const ids = reservation.map(seat => seat.id)\n\n    if(!props.available){\n       return <li className='seat unavailable'>{props.number}</li>\n        \n    }\n\n  return <li onClick={addSeatHandler} className={`seat${ids.includes(props.seatID) ? ' selected' : ''}${props.circled}`}>{props.number}</li>;\n}\n\nexport default Seat;\n","import './Wagon.css';\nimport Seat from './Seat';\n\nfunction Wagon(props) {\n  let availableSeats;\n\n  let endingIndex = 0;\n\n  const consecutivePlaces = () => {\n    let maxConsecutive = 0;\n    let currentConsecutive = 0;\n\n    for (let i = 0; i < props.seats.length; i++) {\n      if (props.seats[i].available) {\n        currentConsecutive++;\n        if (currentConsecutive > maxConsecutive) {\n          maxConsecutive = currentConsecutive;\n          endingIndex = i;\n          if (maxConsecutive === props.minimumSeats) {\n            return maxConsecutive;\n          }\n        }\n      } else {\n        currentConsecutive = 0;\n      }\n    }\n\n    return false;\n  };\n\n  const checkIfCircled = () => {\n    const totalSeats = consecutivePlaces();\n    if (totalSeats && endingIndex) {\n      return endingIndex - totalSeats;\n    } else {\n      return false;\n    }\n  };\n\n  if (props.minimumSeats === '') {\n    availableSeats = '';\n  } else if (consecutivePlaces() < props.minimumSeats) {\n    availableSeats = 'opacityReduced';\n  }\n\n  return (\n    <li\n      className={'wagon ' + props.type.replace(/ /g, '') + ' ' + availableSeats}\n    >\n      <p className=\"wagonType\">{props.type}</p>\n      <ul className='wagonSeatsList' >\n        {props.seats.map((seat, index) => (\n          <Seat\n            wagonNumber={props.numberOfWagon}\n            key={`${props.trainName}${props.numberOfWagon}${seat.seatNumber}`}\n            seatID={`${props.trainName}${props.numberOfWagon}${seat.seatNumber}`}\n            available={seat.available}\n            number={seat.seatNumber}\n            type={props.type}\n            date={props.date}\n            trainName={props.trainName}\n            circled={\n              props.minimumSeats !== ''\n                ? checkIfCircled() !== false &&\n                  index >= checkIfCircled() &&\n                  index <= endingIndex\n                  ? ' circled'\n                  : ''\n                : ''\n            }\n          />\n        ))}\n      </ul>\n    </li>\n  );\n}\n\nexport default Wagon;\n","import { useParams, Link, useHistory } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport Wagon from '../Components/Wagon';\nimport { useSelector } from 'react-redux';\nimport './Train.css';\nimport { PulseLoader } from 'react-spinners';\n\nfunction Train() {\n  const [loading, setLoading] = useState(true);\n  const [wagons, setWagons] = useState([]);\n  const params = useParams();\n  const [type, setType] = useState('all');\n  const [minimumSeats, setMinimumSeats] = useState('');\n  const date = useRef('day');\n  const seats = useSelector((state) => state);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(\n          'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n            params.trainID +\n            '.json'\n        );\n        const data = await response.json();\n        date.current = data.date;\n\n        setWagons([...data.wagons]);\n        setLoading(false);\n      } catch (err) {\n        history.replace('/');\n      }\n    })();\n  }, [history, params.trainID]);\n\n  const typeChangedHandler = (e) => {\n    setType(e.target.value);\n  };\n\n  const minimumSeatsChangeHandler = (e) => {\n    const number = parseInt(+e.target.value);\n\n    if (number >= 2 && number <= 6) {\n      setMinimumSeats(number);\n    } else if (e.target.value === '') {\n      setMinimumSeats(e.target.value);\n    } else {\n      setMinimumSeats('');\n    }\n  };\n\n  return (\n    <div className=\"wagonsWrapper\">\n      <div className=\"wagonsFilters\">\n        <select\n          onChange={typeChangedHandler}\n          className=\"wagonTypeSelector\"\n          name=\"WagonType\"\n        >\n          <option defaultValue value=\"all\">\n            All\n          </option>\n          <option value=\"first class\">First Class</option>\n          <option value=\"second class\">Second Class</option>\n          <option value=\"sleeping\">Sleeping</option>\n        </select>\n        <label className=\"minimumSeatsWrapper\" htmlFor=\"minimumSeats\">\n          Available consecutive seats:\n          <input\n            value={minimumSeats}\n            onChange={minimumSeatsChangeHandler}\n            type=\"number\"\n            id=\"minimumSeats\"\n            className=\"minimumSeats\"\n            min=\"2\"\n            max=\"6\"\n          />\n        </label>\n      </div>\n      <div className=\"legendWrapper\">\n        <p>Seat color legend:</p>\n        <div className=\"legend\">\n          <div className=\"legendItem\">\n            <div className=\"legendColor\"></div>- available\n          </div>\n          <div className=\"legendItem\">\n            <div className=\"legendColor unavailable\"></div>- unavailable\n          </div>\n          <div className=\"legendItem\">\n            <div className=\"legendColor selected\"></div>- selected\n          </div>\n        </div>\n      </div>\n      <PulseLoader\n        loading={loading}\n        color=\"#fff\"\n        size={30}\n        css={{ display: 'block', margin: 'auto', width: 'fit-content' }}\n      />\n      <ul className=\"wagons\">\n        {wagons.map((wagon, index) => {\n          if (wagon.type === type || type === 'all') {\n            return (\n              \n                <Wagon\n                  date={date.current}\n                  trainName={params.trainID}\n                  numberOfWagon={index + 1}\n                  key={index}\n                  availableSeatsNumber={wagon.availableSeats}\n                  seats={wagon.seats}\n                  type={wagon.type}\n                  minimumSeats={minimumSeats}\n                />\n              \n            );\n          }\n          return null;\n        })}\n      </ul>\n      {seats.length === 0 ? (\n        <p className=\"selectSeat\">Select a seat in order to reserve it.</p>\n      ) : (\n        <Link className=\"routerLink trainsLink\" to=\"/checkout\">\n          Go to checkout &gt;\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default Train;\n","import { useField } from \"formik\";\n\nfunction Input({label,...props}) {\n\n  const [field,meta] = useField(props)\n\n  return (\n    <>\n    <label htmlFor={label}>\n      {label} \n    <input id={label} {...field} {...props}/>\n    </label>\n    {(meta.touched && meta.error) && <div className='err' >{meta.error}</div>}\n    </>\n  );\n}\n\nexport default Input;\n","import './Checkout.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport Input from '../Components/Input';\nimport Randomstring from 'randomstring';\nimport actions from '../store/store';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useHistory } from 'react-router-dom';\n\nfunction Checkout() {\n  const seats = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  let code = localStorage.getItem('code');\n  if (!code) {\n    code = Randomstring.generate();\n    localStorage.setItem('code', code);\n  }\n\n  const copyCodeToClipboard = async () => {    \n      await navigator.clipboard.writeText(code);\n  };\n\n  const deleteSeatHandler = (seatID) => {\n    dispatch(actions.addRemoveSeat({ id: seatID }));\n  };\n\n  if(seats.length === 0){\n    history.replace('/')\n  }\n\n  return (\n    <div className=\"checkoutWrapper\">\n      <Formik\n        initialValues={{\n          cnp: '',\n          name: '',\n          email: '',\n        }}\n        validationSchema={yup.object({\n          cnp: yup\n            .string()\n            .matches(/^[0-9]+$/, 'CNP must be only digits')\n            .min(13, 'CNP must be exactly 13 characters long')\n            .max(13, 'CNP must be exactly 13 characters long')\n            .required('CNP is required'),\n          name: yup\n            .string()\n            .min(5, 'Minumum 5 characters')\n            .max(20, 'Maximum 20 characters')\n            .matches(/\\s/, 'Write down all of your names')\n            .required('Name is a required field!'),\n          email: yup\n            .string()\n            .email('Invalid email!')\n            .required('Email is required'),\n        })}\n        onSubmit={(values) => {\n          (async () => {\n            const data = {\n              seats,\n              details: { ...values },\n            };\n            const getData = await fetch(\n              'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n                seats[0].train +\n                '/wagons.json'\n            );\n            const wagonData = await getData.json();\n\n            seats.forEach(seat =>{\n                wagonData[seat.wagonNumber-1].availableSeats--\n                wagonData[seat.wagonNumber-1].seats[seat.seatNumber-1].available=false\n            })\n\n            await fetch(\n                'https://trains-861bd-default-rtdb.firebaseio.com/trains/' +\n                  seats[0].train +\n                  '/wagons.json',\n                  {\n                    method: 'PUT',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(wagonData),\n                  }\n              );\n\n\n            await fetch(\n              'https://trains-861bd-default-rtdb.firebaseio.com/registrations/' +\n                code +\n                '.json',\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ ...data }),\n              }\n            );\n            dispatch(actions.clearStore());\n            localStorage.removeItem('code');\n            history.replace('/');\n          })();\n        }}\n      >\n        {(props) => (\n          <Form>\n            <h2>Book train seats</h2>\n            <Input label=\"CNP\" type=\"text\" name=\"cnp\" />\n            <Input label=\"Name\" type=\"text\" name=\"name\" />\n            <Input label=\"E-mail\" type=\"email\" name=\"email\" />\n            <div className=\"unique\">\n              <p>{code}</p>\n              <button type=\"button\" onClick={copyCodeToClipboard}>\n                Copy to clipboard\n              </button>\n            </div>\n            <button type=\"submit\">Save registration</button>\n          </Form>\n        )}\n      </Formik>\n      <ul className=\"seatsList\">\n        {seats.map((seat) => (\n          <li key={seat.id} >\n            <p>{seat.train}</p>\n            <p>Wagon number: {seat.wagonNumber}</p>\n            <p>{seat.type}</p>\n            <p>seat nr.: {seat.seatNumber}</p>\n            <button\n              className=\"deleteIcon\"\n              onClick={deleteSeatHandler.bind(null, seat.id)}\n            >\n              <DeleteIcon />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport './Navigation.css'\n\nfunction Navigation() {\n  const seats = useSelector((state) => state);\n  const location = useLocation();\n\n  return (\n    <header>\n      <nav>\n        <ul>\n          {location.pathname !== '/' && (\n            <li>\n              <Link to=\"/\">Back to home</Link>\n            </li>\n          )}\n          {seats.length !== 0 && location.pathname !== '/checkout' && (\n            <li>\n              <Link to=\"/checkout\">Checkout</Link>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navigation;\n","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport {  useDispatch } from 'react-redux';\nimport MakeRegistration from './Pages/MakeRegistration';\nimport Train from './Pages/Train';\nimport Checkout from './Pages/Checkout';\nimport { useEffect } from 'react';\nimport actions from './store/store';\nimport Navigation from './Components/Navigation';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (localStorage.getItem('seats')) {\n      const data = JSON.parse(localStorage.getItem('seats'));\n      dispatch(actions.populateStore(data));\n    }\n  }, [dispatch]);\n\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <MakeRegistration />\n        </Route>\n        <Route path=\"/trains/:trainID\" exact>\n          <Train />\n        </Route>\n        <Route path=\"/checkout\">\n          <Checkout />\n        </Route>\n        <Route path=\"/trains\" exact>\n          <Redirect to=\"/\" />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {store} from './store/store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}